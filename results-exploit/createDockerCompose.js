var fs = require('fs')

var file = "version: '3.2'\nservices: \n"
var conf = JSON.parse(fs.readFileSync('./input/config.json'))

let cpt = 1

conf.operations.forEach((obj) => {
  // replicas
  const replicas = obj.replicas
  const opePerReplicas = obj.nbTimes / replicas

  // Temp config file
  let config = ''
  config += '{\n'
  config += '  "name": "myExperiment-part' + cpt + '",\n'
  config += '  "operations": [\n'
  config += '    {\n'
  config += `      "type": "${obj.type}",\n`
  config += `      "nbChar": ${obj.nbChar},\n`
  config += `      "nbTimes": ${opePerReplicas}\n`
  config += '    }\n'
  config += '  ]\n'
  config += '}\n'

  fs.writeFileSync(`./input/config${cpt}.json`, config)

  // Compose File
  file += `  ${conf.name}${cpt}:\n`

  file +=
    '    image: resultexploit:latest\n' +
    '    user: "node"\n' +
    '    volumes:\n' +
    '      - type: bind\n' +
    '        source: ./output\n' +
    '        target: /home/node/app/output\n' +
    '      - type: bind\n' +
    '        source: ./input\n' +
    '        target: /home/node/app/input\n' +
    '    deploy:\n' +
    `      replicas: ${replicas}\n` +
    '      restart_policy:\n' +
    '        condition: none\n' +
    '    command:\n' +
    '      - bash\n' +
    '      - -c\n' +
    '      - |\n' +
    //"        npm i\n" +
    '        npm start --' +
    ` -s ./input/snapshot.json` +
    ` -c ./input/config${cpt}.json` +
    '\n'
  cpt++
})

fs.writeFileSync('./docker-compose-parallel.yml', file)
