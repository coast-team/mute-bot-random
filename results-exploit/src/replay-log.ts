import { readFile } from 'fs/promises'
import { LogootSRename, RenamableLogootSAdd, RenamableLogootSDel, RenamableReplicableList } from 'mute-structs'
import { fromPlainRenamableListSOperation } from "./helpers"

export async function replayLog () {
    const folder = "1594044965"
    const botId = 3

    const logsPath = `../wip-results/${folder}/Logs.Bot${botId}.json`
    const data = await readFile(logsPath, "utf8")
    const logs = JSON.parse(data)
    const operations: Array<LogootSRename | RenamableLogootSAdd | RenamableLogootSDel> = logs.map((entry: any) => {
        return fromPlainRenamableListSOperation(entry.operation.operation)
    })

    const doc = RenamableReplicableList.create()
    operations.forEach((operation) => {
        operation.execute(doc)
    })

    const strPath = `../wip-results/${folder}/string.Bot${botId}.txt`
    const expectedStr = await readFile(strPath, "utf8")
    const actualStr = doc.str
    if (actualStr === expectedStr) {
        console.log("replayLog(): replaying the entire log yields the same result")
    } else {
        console.log("replayLog(): observed a difference when replaying the log")
        console.log("actualStr: ", actualStr)
        console.log("expectedStr: ", expectedStr)

        const otherExpectedStr = await readFile(`../wip-results/${folder}/string.Bot0.txt`, "utf8")
        console.log("actualStr = otherExpectedStr: ", actualStr === otherExpectedStr)
    }
}
