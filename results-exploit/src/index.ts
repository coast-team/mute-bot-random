import * as program from 'commander'
import { checkValidity } from './check-validity'
import { generateIntermediateSnapshots } from './generate-intermediate-snapshots'
import { computeIntegrationTimesInsertOp } from './integration-times-insert-op'
import { computeIntegrationTimesRenameOp } from './integration-times-rename-op'
import { computeLogExecutionTime } from './log-execution-time'
import { replayLog } from './replay-log'
import { computeSnapshotSizes } from './snapshot-sizes'

// Retrieve version from package.json
let version: string
try {
  version = require('../package.json').version
} catch (err) {
  version = ''
}

program
  .version(version)
  .option('-v, --verbose', 'Verbose mode')
  .option('--check-validity', 'Check the validity of simulation outputs')
  .option('--generate-intermediate-snapshots', 'Generate intermediate snapshots')
  .option(
    '--integration-times-insert-op',
    'Compute integration times of insert operations'
  )
  .option('--integration-times-rename-op', 'Compute integration times of rename ops')
  .option('--log-execution-time', 'Compute execution of entire log')
  .option('--replay-log', 'Replay operations from a given log')
  .option('--snapshot-sizes', 'Compute sizes of snapshots')
  .parse(process.argv)

if (program.checkValidity) {
  checkValidity()
} else if (program.generateIntermediateSnapshots) {
  generateIntermediateSnapshots()
} else if (program.integrationTimesInsertOp) {
  computeIntegrationTimesInsertOp()
} else if (program.integrationTimesRenameOp) {
  computeIntegrationTimesRenameOp()
} else if (program.logExecutionTime) {
  computeLogExecutionTime()
} else if (program.snapshotSizes) {
  computeSnapshotSizes()
} else if (program.replayLog) {
  replayLog()
} else {
  program.help()
}
